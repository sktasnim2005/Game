#include <bits/stdc++.h>
using namespace std;

const char PLAYER = 'X';
const char COMPUTER = 'O';

void drawBoard(char *spaces);
void playerMove(char *spaces, char player);
void computerMove(char *spaces, char computer);
bool checkWinner(char *spaces, char player, char computer);
bool checkTie(char *spaces);

int main() {
    do {
        char spaces[9] = {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '};
        bool running = true;

        cout << "Welcome to Tic Tac Toe!" << endl;
        cout << "Here is the board with positions: " << endl;
        char tempSpaces[9] = {'1', '2', '3', '4', '5', '6', '7', '8', '9'};
        drawBoard(tempSpaces);

        while (running) {
            cout << "Your turn, bro! Place 'X'." << endl;
            playerMove(spaces, PLAYER);
            drawBoard(spaces);
            if (checkWinner(spaces, PLAYER, COMPUTER)) {
                running = false;
                break;
            }
            if (checkTie(spaces)) {
                running = false;
                break;
            }

            cout << "Computer's Turn!" << endl;
            computerMove(spaces, COMPUTER);
            drawBoard(spaces);

            if (checkWinner(spaces, PLAYER, COMPUTER)) {
                running = false;
                break;
            }
            if (checkTie(spaces)) {
                running = false;
                break;
            }
        }

        char playAgain;
        cout << "Do you want to play again? (y/n): ";
        cin >> playAgain;
        if (playAgain != 'y' && playAgain != 'Y') {
            break;
        }
    } while (true);

    cout << "Thanks for Playing!" << endl;
    return 0;
}

void drawBoard(char *spaces) {
    cout << endl;
    cout << "     |     |     " << endl;
    cout << "  " << spaces[0] << "  |  " << spaces[1] << "  |  " << spaces[2] << "  " << endl;
    cout << "_____|_____|_____" << endl;
    cout << "     |     |     " << endl;
    cout << "  " << spaces[3] << "  |  " << spaces[4] << "  |  " << spaces[5] << "  " << endl;
    cout << "_____|_____|_____" << endl;
    cout << "     |     |     " << endl;
    cout << "  " << spaces[6] << "  |  " << spaces[7] << "  |  " << spaces[8] << "  " << endl;
    cout << "     |     |     " << endl;
    cout << endl;
}

void playerMove(char *spaces, char player) {
    int number;
    while (true) {
        cout << "Enter a spot to place your marker (1-9): ";
        cin >> number;

        if (!cin || number < 1 || number > 9 || spaces[number - 1] != ' ') {
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            cout << "Invalid input. Please try again." << endl;
        } else {
            spaces[number - 1] = player;
            break;
        }
    }
}

void computerMove(char *spaces, char computer) {
    // Try to win
    for (int i = 0; i < 9; i++) {
        if (spaces[i] == ' ') {
            spaces[i] = computer;
            if (checkWinner(spaces, computer, PLAYER)) {
                return;
            }
            spaces[i] = ' ';
        }
    }

    // Block player's win
    for (int i = 0; i < 9; i++) {
        if (spaces[i] == ' ') {
            spaces[i] = PLAYER;
            if (checkWinner(spaces, PLAYER, computer)) {
                spaces[i] = computer;
                return;
            }
            spaces[i] = ' ';
        }
    }

    // Random move
    int number;
    srand(time(0));
    while (true) {
        number = rand() % 9;
        if (spaces[number] == ' ') {
            spaces[number] = computer;
            break;
        }
    }
}

bool checkWinner(char *spaces, char player, char computer) {
    int winConditions[8][3] = {
        {0, 1, 2}, {3, 4, 5}, {6, 7, 8}, // Rows
        {0, 3, 6}, {1, 4, 7}, {2, 5, 8}, // Columns
        {0, 4, 8}, {2, 4, 6}             // Diagonals
    };

    for (auto &win : winConditions) {
        if (spaces[win[0]] != ' ' && spaces[win[0]] == spaces[win[1]] && spaces[win[1]] == spaces[win[2]]) {
            if (spaces[win[0]] == player) {
                cout << "YOU WIN!" << endl;
            } else {
                cout << "YOU LOSE!" << endl;
            }
            return true;
        }
    }
    return false;
}

bool checkTie(char *spaces) {
    for (int i = 0; i < 9; i++) {
        if (spaces[i] == ' ') {
            return false;
        }
    }
    cout << "IT'S A TIE!" << endl;
    return true;
}

